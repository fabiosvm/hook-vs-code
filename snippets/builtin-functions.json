{
	"print built-in function": {
		"prefix": "print",
		"body": [
			"print(${1:value});"
		]
	},
	"println built-in function": {
		"prefix": "println",
		"body": [
			"println(${1:value});"
		]
	},
	"type built-in function": {
		"prefix": "type",
		"body": [
			"type(${1:value})"
		]
	},
	"is_nil built-in function": {
		"prefix": "isn",
		"body": [
			"is_nil(${1:value})"
		]
	},
	"is_bool built-in function": {
		"prefix": "isb",
		"body": [
			"is_bool(${1:value})"
		]
	},
	"is_number built-in function": {
		"prefix": "isnum",
		"body": [
			"is_number(${1:value})"
		]
	},
	"is_int built-in function": {
		"prefix": "isi",
		"body": [
			"is_int(${1:value})"
		]
	},
	"is_string built-in function": {
		"prefix": "isstr",
		"body": [
			"is_string(${1:value})"
		]
	},
	"is_range built-in function": {
		"prefix": "isr",
		"body": [
			"is_range(${1:value})"
		]
	},
	"is_array built-in function": {
		"prefix": "isa",
		"body": [
			"is_array(${1:value})"
		]
	},
	"is_struct built-in function": {
		"prefix": "iss",
		"body": [
			"is_struct(${1:value})"
		]
	},
	"is_instance built-in function": {
		"prefix": "isinst",
		"body": [
			"is_instance(${1:value})"
		]
	},
	"is_iterator built-in function": {
		"prefix": "isit",
		"body": [
			"is_iterator(${1:value})"
		]
	},
	"is_callable built-in function": {
		"prefix": "isc",
		"body": [
			"is_callable(${1:value})"
		]
	},
	"is_userdata built-in function": {
		"prefix": "isu",
		"body": [
			"is_userdata(${1:value})"
		]
	},
	"is_object built-in function": {
		"prefix": "iso",
		"body": [
			"is_object(${1:value})"
		]
	},
	"is_comparable built-in function": {
		"prefix": "iscmp",
		"body": [
			"is_comparable(${1:value})"
		]
	},
	"is_iterable built-in function": {
		"prefix": "isiter",
		"body": [
			"is_iterable(${1:value})"
		]
	},
	"to_bool built-in function": {
		"prefix": "tob",
		"body": [
			"to_bool(${1:value})"
		]
	},
	"to_int built-in function": {
		"prefix": "toi",
		"body": [
			"to_int(${1:value})"
		]
	},
	"to_number built-in function": {
		"prefix": "ton",
		"body": [
			"to_number(${1:value})"
		]
	},
	"to_string built-in function": {
		"prefix": "tos",
		"body": [
			"to_string(${1:value})"
		]
	},
	"ord built-in function": {
		"prefix": "ord",
		"body": [
			"ord(${1:char})"
		]
	},
	"chr built-in function": {
		"prefix": "chr",
		"body": [
			"chr(${1:int})"
		]
	},
	"hex built-in function": {
		"prefix": "hex",
		"body": [
			"hex(${1:string})"
		]
	},
	"bin built-in function": {
		"prefix": "bin",
		"body": [
			"bin(${1:string})"
		]
	},
	"address built-in function": {
		"prefix": "addr",
		"body": [
			"address(${1:value})"
		]
	},
	"refcount built-in function": {
		"prefix": "refc",
		"body": [
			"refcount(${1:value})"
		]
	},
	"cap built-in function": {
		"prefix": "cap",
		"body": [
			"cap(${1:value})"
		]
	},
	"len built-in function": {
		"prefix": "len",
		"body": [
			"len(${1:value})"
		]
	},
	"is_empty built-in function": {
		"prefix": "is_empty",
		"body": [
			"is_empty(${1:value})"
		]
	},
	"compare built-in function": {
		"prefix": "compare",
		"body": [
			"compare(${1:value}, ${2:value})"
		]
	},
	"split built-in function": {
		"prefix": "split",
		"body": [
			"split(${1:string}, \"${2:separator}\")"
		]
	},
	"join built-in function": {
		"prefix": "join",
		"body": [
			"join(${1:array}, \"${2:separator}\")"
		]
	},
	"iter built-in function": {
		"prefix": "it",
		"body": [
			"iter(${1:iterable})"
		]
	},
	"valid built-in function": {
		"prefix": "valid",
		"body": [
			"valid(${1:iterator})"
		]
	},
	"current built-in function": {
		"prefix": "curr",
		"body": [
			"current(${1:iterator})"
		]
	},
	"next built-in function": {
		"prefix": "next",
		"body": [
			"next(${1:iterator})"
		]
	},	
	"sleep built-in function": {
		"prefix": "sleep",
		"body": [
			"sleep(${1:ms});"
		]
	},
	"assert built-in function": {
		"prefix": "assert",
		"body": [
			"assert(${1:assertion}, \"${2:message}\");"
		]
	},
	"panic built-in function": {
		"prefix": "panic",
		"body": [
			"panic(\"${1:message}\");"
		]
	}
}
